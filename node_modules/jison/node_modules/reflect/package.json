{
  "author": {
    "name": "Zach Carter",
    "email": "zach@carter.name",
    "url": "http://zaa.ch"
  },
  "name": "reflect",
  "description": "JavaScript parser adhering to Mozilla's parser API",
  "version": "0.0.7",
  "keywords": [
    "parser",
    "ast",
    "reflect",
    "javascript"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/zaach/reflect.js.git"
  },
  "bugs": {
    "url": "http://github.com/zaach/reflect.js/issues"
  },
  "main": "dist/reflect.js",
  "engines": {
    "node": ">= 0.4"
  },
  "devDependencies": {
    "jison": "*",
    "uglify-js": "*"
  },
  "scripts": {
    "test": "node test/all-tests.js"
  },
  "dependencies": {},
  "optionalDependencies": {},
  "readme": "![Reflect.js](https://github.com/zaach/reflect.js/raw/master/reflectjs.png \"Reflect.js\")\n\nReflect.js is a JavaScript (ES3 compatible) implementation of [Mozilla's Parser API](https://developer.mozilla.org/en/SpiderMonkey/Parser_API). It does not currently support some of Mozilla's extensions, such as generators, list comprehensions, `for each`, E4X, etc. but may eventually support ones that are, or become Harmony proposals.\nBuilders are also supported.\n\nParsing really large files can be slow, for reasons [articulated](http://www.andychu.net/ecmascript/RegExp-Enhancements.html) by Andy Chu.\n\n\nDownload\n========\nYou can download a minified-standalone version of reflect.js to embed in web pages [here](https://raw.github.com/zaach/reflect.js/master/standalone/reflect.js).\n\nInstall\n=======\nReflect.js is available as a CommonJS module for Node.js. Simply install it with npm:\n\n    npm install reflect\n\nUse\n=======\n\n    var Reflect = require('reflect');\n\n    var ast = Reflect.parse(\"var a = 4 + 7\");\n\n    console.log(Reflect.stringify(ast, \"  \"));\n\nRefer to [Mozilla's docs](https://developer.mozilla.org/en/SpiderMonkey/Parser_API) for details on the AST interface.\n\nBuilders\n=======\nThe optional [builder](https://developer.mozilla.org/en/SpiderMonkey/Parser_API#Builder_objects) parameter to Reflect.parse() makes it possible to construct user-specified data from the parser, rather than the default Node objects.\n\nThe reflect.js module exports the [default builder](https://raw.github.com/zaach/reflect.js/master/lib/nodes.js) so you can redefine only the node constructors you care about and leave the rest default.\n\n    var Reflect = require('reflect');\n    var builder = Reflect.builder;\n\n    // redefine callback for variable declarations\n    builder[\"variableDeclaration\"] = function (kind, declarators, loc) { ... };\n\n    var ast = Reflect.parse(\"var a = 4 + 7\", {builder: builder});\n\nLicense\n=======\nMIT X Licensed.\n",
  "readmeFilename": "README.md",
  "_id": "reflect@0.0.7",
  "dist": {
    "shasum": "708bbf5d69a8b256ac35b54b07b7c43ede4c78a7"
  },
  "_from": "reflect@0.0.7",
  "_resolved": "https://registry.npmjs.org/reflect/-/reflect-0.0.7.tgz"
}
